# --- 1. Namespace ---
apiVersion: v1
kind: Namespace
metadata:
  name: bibliotheque

---

# --- 2. ConfigMap ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: biblio-config
  namespace: bibliotheque
data:
  APP_ENV: "production"
  DB_HOST: "db-service"
  LOG_LEVEL: "debug"
  DB_USER: "postgres"
  DB_NAME: "bibliotheque_iset"
  DB_PORT: "5432"
  PORT: "3000"

---

# --- 3. Secret ---
apiVersion: v1
kind: Secret
metadata:
  name: biblio-secrets
  namespace: bibliotheque
type: Opaque
data:
  DB_PASSWORD: cGFzc3dvcmQ=           # "password"
  API_KEY: bWFDbGVBUElzZWNyZXRlWFla   # "maCleAPIsecreteXYZ"

---

# --- 4. Deployment ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bibliom1
  namespace: bibliotheque
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: biblio
      tier: backend
  template:
    metadata:
      labels:
        app: biblio
        tier: backend
    spec:
      containers:
      - name: bibliom1
        image: touatifadwa/bibliomicro1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080  # Assure-toi que ton app Ã©coute sur ce port
          name: app-port
        envFrom:
        - configMapRef:
            name: biblio-config
        - secretRef:
            name: biblio-secrets
        resources:
          requests:
            cpu: "800m"
            memory: "512Mi"
          limits:
            cpu: "1500m"
            memory: "1.5Gi"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 25
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 5
          failureThreshold: 3

---

# --- 5. Service ---
apiVersion: v1
kind: Service
metadata:
  name: biblio-service
  namespace: bibliotheque
spec:
  type: NodePort
  selector:
    app: biblio
    tier: backend
  ports:
    - name: http
      port: 80
      targetPort: 3000
      nodePort: 31000