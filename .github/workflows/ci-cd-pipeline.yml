name: CI/CD avec qualit√©, d√©ploiement, rollback et monitoring

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SONAR_HOST_URL: http://localhost:9000
  GRAFANA_URL: http://localhost:3000
  PROMETHEUS_URL: http://localhost:9090
  DOCKER_IMAGE: touatifadwa/bibliomicro1:latest
  KUBECONFIG: ${{ github.workspace }}/kubeconfig

jobs:
  build:
    name: üèóÔ∏è Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE .

      - name: Push Docker image
        env:
          DOCKER_USERNAME: touatifadwa
          DOCKER_PASSWORD: foufou53550880
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push $DOCKER_IMAGE

  tests:
    name: üß™ Tests + Qualit√©
    runs-on: ubuntu-latest
    needs: build

    services:
      sonarqube:
        image: sonarqube:community
        ports: [9000:9000]
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
          SONAR_FORCE_AUTHENTICATION: "false"
          SONAR_WEB_JVM_OPTS: "-Djava.awt.headless=true"
          SONAR_ADMIN_PASSWORD: admin

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install
          npm install -g sonarqube-scanner

      - name: Run tests and collect coverage
        run: |
          npm test -- --coverage
          mv coverage/lcov.info coverage/lcov-full.info

      - name: Wait for SonarQube to be ready
        run: |
          echo "‚è≥ Waiting for SonarQube to start..."
          for i in {1..30}; do
            if curl -sSf "$SONAR_HOST_URL/api/system/status" | grep -q '"status":"UP"'; then
              echo "‚úÖ SonarQube is ready"
              break
            fi
            echo "Attempt $i/30: SonarQube not ready yet. Waiting 5 seconds..."
            sleep 5
          done

      - name: Configure SonarQube
        run: |
          # Create a project if it doesn't exist
          curl -u admin:admin -X POST "$SONAR_HOST_URL/api/projects/create" \
            -d "project=BIBLIO_MAIN" \
            -d "name=Bibliotheque" || true

      - name: Run SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey="BIBLIO_MAIN" \
            -Dsonar.projectName="Bibliotheque" \
            -Dsonar.host.url="$SONAR_HOST_URL" \
            -Dsonar.login="admin" \
            -Dsonar.password="admin" \
            -Dsonar.sources=src \
            -Dsonar.tests=tests \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov-full.info \
            -Dsonar.scm.disabled=true

  # [Le reste du fichier reste inchang√©...]